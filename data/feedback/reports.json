[
  {
    "testName": "Prueba:",
    "errorType": "javascript",
    "errorDescription": "## Error Type\nConsole Error\n\n## Error Message\nLogin error: \"CredentialsSignin\"\n\n\n    at onSubmit (src/app/auth/login/page.tsx:62:17)\n\n## Code Frame\n  60 |\n  61 |       if (result?.error) {\n> 62 |         console.error(\"Login error:\", result.error)\n     |                 ^\n  63 |         if (result.error === \"CredentialsSignin\") {\n  64 |           setError(\"Email o contraseña incorrectos\")\n  65 |         } else if (result.error === \"Configuration\") {\n\nNext.js version: 15.5.3 (Webpack)\n",
    "errorSteps": "poner la contraseña mal",
    "errorConsole": "## Error Type\nConsole Error\n\n## Error Message\nLogin error: \"CredentialsSignin\"\n\n\n    at onSubmit (src/app/auth/login/page.tsx:62:17)\n\n## Code Frame\n  60 |\n  61 |       if (result?.error) {\n> 62 |         console.error(\"Login error:\", result.error)\n     |                 ^\n  63 |         if (result.error === \"CredentialsSignin\") {\n  64 |           setError(\"Email o contraseña incorrectos\")\n  65 |         } else if (result.error === \"Configuration\") {\n\nNext.js version: 15.5.3 (Webpack)\n",
    "browserInfo": "Mozilla/5.0 (Macintosh;",
    "timestamp": "2025-10-25T21:35:15.026Z",
    "analysis": [
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 42,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingCategory, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 48,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingCategory) {"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 145,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingCategory, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 151,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingCategory) {"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 96,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching categories:', error);"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 42,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingClient, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 48,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingClient) {"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 144,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingClient, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 150,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingClient) {"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 99,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching clients:', error);"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 42,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingCompany, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 48,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingCompany) {"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 127,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingCompany, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 133,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingCompany) {"
      },
      {
        "file": "/src/app/api/companies/route.ts",
        "line": 37,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching companies:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 41,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingEstado, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 47,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingEstado) {"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 154,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingEstado, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 160,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingEstado) {"
      },
      {
        "file": "/src/app/api/estados-remitos/route.ts",
        "line": 64,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching estados remitos:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 232,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (line.includes('undefined') && line.includes('.')) {"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 247,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "issue: 'useEffect sin dependencias puede causar loops infinitos',"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 249,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "solution: 'Agregar array de dependencias apropiado al useEffect',"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 340,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "solution += '<li>Agregar manejo de errores de red en las llamadas fetch</li></ol>';"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 363,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "solution += '<li>Revisar que no haya loops infinitos en useEffect</li>';"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 45,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingProduct, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 51,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingProduct) {"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 68,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (name !== undefined) updateData.name = name;"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 69,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (description !== undefined) updateData.description = description;"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 88,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (categoryId !== undefined) updateData.category_id = categoryId || null;"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 172,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingProduct, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 178,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingProduct) {"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 99,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching products:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 240,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: completeRemito, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 281,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError) {"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 282,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching updated remito:', fetchError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 44,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingRemito, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 50,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingRemito) {"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 91,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching remitos:', error);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 284,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: completeRemito, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 325,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError) {"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 326,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching complete remito:', fetchError);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 119,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingUser, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 125,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingUser) {"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 165,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (address !== undefined) updateData.address = address;"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 166,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (phone !== undefined) updateData.phone = phone;"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 167,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "if (companyId !== undefined) updateData.company_id = companyId;"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 258,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const { data: existingUser, error: fetchError } = await supabaseAdmin"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 264,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "if (fetchError || !existingUser) {"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 116,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error('Error fetching users:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 123,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.log('Users fetched:', {"
      },
      {
        "file": "/src/app/auth/login/page.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from \"react\""
      },
      {
        "file": "/src/app/auth/login/page.tsx",
        "line": 38,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 4,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from \"react\""
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 54,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 64,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 74,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 86,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/remitos?companyId=${effectiveCompanyId}`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 87,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/products?companyId=${effectiveCompanyId}`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 88,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/clients?companyId=${effectiveCompanyId}`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 89,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/categories?companyId=${effectiveCompanyId}`)"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 101,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/users?companyId=${currentUser.companyId}&countToday=true`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 102,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/clients?companyId=${currentUser.companyId}&countToday=true`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 103,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/products?companyId=${currentUser.companyId}&countToday=true`),"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 104,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetch(`/api/categories?companyId=${currentUser.companyId}&countToday=true`)"
      },
      {
        "file": "/src/app/estados-remitos/page.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect, Suspense, useCallback } from \"react\";"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect, Suspense, useCallback } from \"react\";"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 93,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const productsResponse = await fetch(`/api/products?companyId=${companyId}`);"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 104,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const categoriesResponse = await fetch(`/api/categories?companyId=${companyId}`);"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 116,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 159,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 165,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${productId}`, {"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 199,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${showDeleteConfirm.id}`, {"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 223,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(url, {"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 4,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect, useState } from \"react\";"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 13,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 14,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const fetchRemito = async () => {"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 17,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${params.id}`);"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 27,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "console.error(\"Error fetching remito:\", error);"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 34,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "fetchRemito();"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 38,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 48,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect, Suspense, useCallback } from \"react\";"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 128,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos?companyId=${companyId}`);"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 140,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 178,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${remitoId}/status`, {"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 200,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${showDeleteConfirm.id}`, {"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 223,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(url, {"
      },
      {
        "file": "/src/app/usuarios/page.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect, Suspense, useCallback } from \"react\";"
      },
      {
        "file": "/src/app/usuarios/page.tsx",
        "line": 45,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/app/usuarios/page.tsx",
        "line": 80,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/EnvironmentBanner.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useEffect, useRef } from 'react';"
      },
      {
        "file": "/src/components/common/EnvironmentBanner.tsx",
        "line": 12,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/ErrorBoundary.tsx",
        "line": 81,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "URL: ${typeof window !== 'undefined' ? window.location.href : 'Unknown'}"
      },
      {
        "file": "/src/components/common/FilterableSelect.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useRef, useEffect } from \"react\";"
      },
      {
        "file": "/src/components/common/FilterableSelect.tsx",
        "line": 37,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/FilterableSelect.tsx",
        "line": 82,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/FilterableSelect.tsx",
        "line": 108,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/MessageModal.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect } from 'react';"
      },
      {
        "file": "/src/components/common/MessageModal.tsx",
        "line": 15,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/common/PasswordGeneratorModal.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect } from \"react\";"
      },
      {
        "file": "/src/components/common/PasswordGeneratorModal.tsx",
        "line": 33,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/forms/CategoriaForm.tsx",
        "line": 43,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/ClienteForm.tsx",
        "line": 57,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/EmpresaForm.tsx",
        "line": 43,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/EstadoRemitoForm.tsx",
        "line": 55,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/ProductoForm.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useEffect } from \"react\";"
      },
      {
        "file": "/src/components/forms/ProductoForm.tsx",
        "line": 57,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/forms/RemitoFormComplete.tsx",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import React, { useState, useEffect } from \"react\";"
      },
      {
        "file": "/src/components/forms/RemitoFormComplete.tsx",
        "line": 65,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/forms/RemitoFormComplete.tsx",
        "line": 178,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch('/api/clients', {"
      },
      {
        "file": "/src/components/forms/UsuarioForm.tsx",
        "line": 84,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/UsuarioForm.tsx",
        "line": 91,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/forms/UsuarioForm.tsx",
        "line": 98,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/components/layout/AuthenticatedLayout.tsx",
        "line": 6,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect } from \"react\";"
      },
      {
        "file": "/src/components/layout/AuthenticatedLayout.tsx",
        "line": 29,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "// Redirección simple sin useEffect"
      },
      {
        "file": "/src/components/layout/Header.tsx",
        "line": 68,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch('/api/admin/logs');"
      },
      {
        "file": "/src/components/layout/Layout.tsx",
        "line": 5,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect } from \"react\""
      },
      {
        "file": "/src/components/layout/Layout.tsx",
        "line": 18,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/components/layout/TopBar.tsx",
        "line": 74,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "? (typeof window !== 'undefined' && localStorage.getItem('impersonation')"
      },
      {
        "file": "/src/components/ui/popover.tsx",
        "line": 44,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "React.useEffect(() => {"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 60,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/categories?companyId=${effectiveCompanyId}`);"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 83,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/categories\", {"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 115,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/categories/${id}`, {"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 145,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/categories/${id}`, {"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 162,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 60,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/clients\", {"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 92,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients/${id}`, {"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 122,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients/${id}`, {"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 159,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients?companyId=${effectiveCompanyId}`);"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 175,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useDataWithCompanySimple.ts",
        "line": 4,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from \"react\";"
      },
      {
        "file": "/src/hooks/useDataWithCompanySimple.ts",
        "line": 15,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useDataWithCompanySimple.ts",
        "line": 26,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 36,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/companies\");"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 54,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/companies\", {"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 77,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/companies/${id}`, {"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 104,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/companies/${id}`, {"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 121,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useEnvironment.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect, useState } from 'react';"
      },
      {
        "file": "/src/hooks/useEnvironment.ts",
        "line": 10,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useEstadosByCompany.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from \"react\";"
      },
      {
        "file": "/src/hooks/useEstadosByCompany.ts",
        "line": 29,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/estados-remitos?companyId=${companyId}`);"
      },
      {
        "file": "/src/hooks/useEstadosByCompany.ts",
        "line": 47,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useMemo, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 108,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(url);"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 126,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 132,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/estados-remitos\", {"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 158,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/estados-remitos/${id}`, {"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 186,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/estados-remitos/${id}`, {"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 12,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch('/api/auth/impersonate', {"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 53,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch('/api/auth/stop-impersonation', {"
      },
      {
        "file": "/src/hooks/useLoading.ts",
        "line": 27,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "progress: progress !== undefined ? progress : loading.progress"
      },
      {
        "file": "/src/hooks/useLocalStorage.ts",
        "line": 1,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from 'react';"
      },
      {
        "file": "/src/hooks/useLocalStorage.ts",
        "line": 7,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 80,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products?companyId=${effectiveCompanyId}`);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 103,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/test-products\", {"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 135,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`, {"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 165,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`, {"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 192,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`, {"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 209,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from \"react\";"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 83,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos?companyId=${effectiveCompanyId}`);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 106,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/remitos\", {"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 132,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}`, {"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 159,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}/status`, {"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 186,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}`, {"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 205,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}`);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 216,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useSessionGuard.tsx",
        "line": 5,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useEffect } from \"react\";"
      },
      {
        "file": "/src/hooks/useSessionGuard.tsx",
        "line": 16,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useTheme.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect, useCallback } from 'react';"
      },
      {
        "file": "/src/hooks/useTheme.ts",
        "line": 46,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useTheme.ts",
        "line": 55,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 3,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "import { useState, useEffect } from \"react\";"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 42,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(usersUrl);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 66,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "companyId: userData.companyId || (session?.user?.role === 'ADMIN' ? session?.user?.companyId : undefined)"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 69,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/users\", {"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 95,
        "issue": "Posible acceso a propiedad de undefined",
        "severity": "high",
        "solution": "Agregar verificación de null/undefined antes de acceder a propiedades",
        "codeSnippet": "companyId: userData.companyId || (session?.user?.role === 'ADMIN' ? session?.user?.companyId : undefined)"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 98,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/users/${id}`, {"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 125,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/users/${id}`, {"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 142,
        "issue": "useEffect sin dependencias puede causar loops infinitos",
        "severity": "high",
        "solution": "Agregar array de dependencias apropiado al useEffect",
        "codeSnippet": "useEffect(() => {"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 5,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/categories\")"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 13,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/categories\", {"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 30,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/categories/${id}`, {"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 47,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/categories/${id}`, {"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 5,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/clients\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 13,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/clients\", {"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 30,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients/${id}`, {"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 47,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients/${id}`, {"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 60,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/clients/${id}`)"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 5,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/products\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 13,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/products\", {"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 30,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`, {"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 47,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`, {"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 60,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/products/${id}`)"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 5,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/remitos\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 13,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(\"/api/remitos\", {"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 30,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}`)"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 43,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}/status`, {"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 60,
        "issue": "Fetch sin manejo de errores",
        "severity": "high",
        "solution": "Agregar .catch() para manejar errores de red",
        "codeSnippet": "const response = await fetch(`/api/remitos/${id}`, {"
      },
      {
        "file": "/src/app/api/admin/logs/route.ts",
        "line": 46,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al obtener logs:', error);"
      },
      {
        "file": "/src/app/api/auth/impersonate/route.ts",
        "line": 102,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error en impersonation:', error);"
      },
      {
        "file": "/src/app/api/auth/stop-impersonation/route.ts",
        "line": 29,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al detener impersonation:', error);"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 103,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating category:', error);"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 112,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in categories PUT:', error);"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 186,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting category:', error);"
      },
      {
        "file": "/src/app/api/categories/[id]/route.ts",
        "line": 198,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in categories DELETE:', error);"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 72,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error counting categories today:', error);"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 96,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching categories:', error);"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 105,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in categories GET:', error);"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 198,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating category:', error);"
      },
      {
        "file": "/src/app/api/categories/route.ts",
        "line": 207,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in categories POST:', error);"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 102,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating client:', error);"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 111,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in clients PUT:', error);"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 185,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting client:', error);"
      },
      {
        "file": "/src/app/api/clients/[id]/route.ts",
        "line": 197,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in clients DELETE:', error);"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 75,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error counting clients today:', error);"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 99,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching clients:', error);"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 108,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in clients GET:', error);"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 206,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating client:', error);"
      },
      {
        "file": "/src/app/api/clients/route.ts",
        "line": 215,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in clients POST:', error);"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 85,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating company:', error);"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 94,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in companies PUT:', error);"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 160,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting company:', error);"
      },
      {
        "file": "/src/app/api/companies/[id]/route.ts",
        "line": 172,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in companies DELETE:', error);"
      },
      {
        "file": "/src/app/api/companies/route.ts",
        "line": 37,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching companies:', error);"
      },
      {
        "file": "/src/app/api/companies/route.ts",
        "line": 46,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in companies GET:', error);"
      },
      {
        "file": "/src/app/api/companies/route.ts",
        "line": 110,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating company:', error);"
      },
      {
        "file": "/src/app/api/companies/route.ts",
        "line": 119,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in companies POST:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 112,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating estado remito:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 121,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error en PUT /api/estados-remitos/[id]:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 198,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting estado remito:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/[id]/route.ts",
        "line": 210,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error en DELETE /api/estados-remitos/[id]:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/route.ts",
        "line": 64,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching estados remitos:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/route.ts",
        "line": 73,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error en GET /api/estados-remitos:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/route.ts",
        "line": 176,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating estado remito:', error);"
      },
      {
        "file": "/src/app/api/estados-remitos/route.ts",
        "line": 185,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error en POST /api/estados-remitos:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 41,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error processing feedback:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 72,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error analyzing code:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 122,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error getting relevant files:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 141,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error reading directory:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 158,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error reading API directory:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 176,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error reading components directory:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 192,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error reading hooks directory:', error);"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 221,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "if (line.includes('console.error') || line.includes('throw new Error')) {"
      },
      {
        "file": "/src/app/api/feedback/process/route.ts",
        "line": 278,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(`Error analyzing file ${filePath}:`, error);"
      },
      {
        "file": "/src/app/api/feedback/store/route.ts",
        "line": 44,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error guardando reporte:', error);"
      },
      {
        "file": "/src/app/api/feedback/store/route.ts",
        "line": 86,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error guardando reporte en archivo:', error);"
      },
      {
        "file": "/src/app/api/feedback/store/route.ts",
        "line": 129,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error leyendo reportes:', error);"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 130,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating product:', error);"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 139,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in products PUT:', error);"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 213,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting product:', error);"
      },
      {
        "file": "/src/app/api/products/[id]/route.ts",
        "line": 225,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in products DELETE:', error);"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 74,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error counting products today:', error);"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 99,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching products:', error);"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 108,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in products GET:', error);"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 182,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating product:', error);"
      },
      {
        "file": "/src/app/api/products/route.ts",
        "line": 191,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in products POST:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 89,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos GET:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 195,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating remito:', updateError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 209,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting existing items:', deleteItemsError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 232,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error inserting new items:', insertItemsError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 282,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching updated remito:', fetchError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 291,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos PUT:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 344,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting remito items:', deleteItemsError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 360,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting remito:', deleteError);"
      },
      {
        "file": "/src/app/api/remitos/[id]/route.ts",
        "line": 369,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos DELETE:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 86,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Estado validation failed:', { estadoError, estado, statusId, companyId });"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 111,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating remito status:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 125,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos status PUT:', error);"
      },
      {
        "file": "/src/app/api/remitos/[id]/status/route.ts",
        "line": 126,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error stack:', error.stack);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 91,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching remitos:', error);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 113,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos GET:', error);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 200,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error getting next remito number:', numberError);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 244,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating remito:', remitoError);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 272,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating remito items:', itemsError);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 326,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching complete remito:', fetchError);"
      },
      {
        "file": "/src/app/api/remitos/route.ts",
        "line": 335,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in remitos POST:', error);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 78,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in users GET by ID:', error);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 202,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating user:', error);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 211,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in users PUT:', error);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 288,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error deleting user:', error);"
      },
      {
        "file": "/src/app/api/users/[id]/route.ts",
        "line": 300,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in users DELETE:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 81,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error counting users today:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 116,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error fetching users:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 132,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in users GET:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 228,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating user:', error);"
      },
      {
        "file": "/src/app/api/users/route.ts",
        "line": 258,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error in users POST:', error);"
      },
      {
        "file": "/src/app/auth/login/page.tsx",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Login error:\", result.error)"
      },
      {
        "file": "/src/app/auth/login/page.tsx",
        "line": 91,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Login error:\", error)"
      },
      {
        "file": "/src/app/dashboard/page.tsx",
        "line": 158,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error loading dashboard stats:', error)"
      },
      {
        "file": "/src/app/empresas/page.tsx",
        "line": 129,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error saving company:\", error);"
      },
      {
        "file": "/src/app/empresas/page.tsx",
        "line": 144,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error deleting company:\", error);"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 110,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error loading data:', error);"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 174,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Error al actualizar el stock');"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 184,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating stock:', error);"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 209,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || 'Error al eliminar producto');"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 234,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('El producto creado no tiene los datos válidos');"
      },
      {
        "file": "/src/app/productos/ProductosContent.tsx",
        "line": 249,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || 'Error al guardar producto');"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 24,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error response:', response.status, response.statusText);"
      },
      {
        "file": "/src/app/remitos/[id]/print/page.tsx",
        "line": 27,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error fetching remito:\", error);"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 134,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error loading remitos:', error);"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 187,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Error al actualizar el estado');"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 192,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error updating status:', error);"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 209,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Error al eliminar remito');"
      },
      {
        "file": "/src/app/remitos/page.tsx",
        "line": 240,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Error al guardar remito');"
      },
      {
        "file": "/src/components/common/ErrorBoundary.tsx",
        "line": 44,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('ErrorBoundary caught an error:', error, errorInfo);"
      },
      {
        "file": "/src/components/common/ErrorBoundary.tsx",
        "line": 93,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Failed to copy error to clipboard:', err);"
      },
      {
        "file": "/src/components/common/ImpersonationBanner.tsx",
        "line": 20,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al detener impersonation:', error);"
      },
      {
        "file": "/src/components/common/PasswordGeneratorModal.tsx",
        "line": 57,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al copiar:', err);"
      },
      {
        "file": "/src/components/forms/RemitoFormComplete.tsx",
        "line": 190,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Error al crear cliente');"
      },
      {
        "file": "/src/components/forms/RemitoFormComplete.tsx",
        "line": 206,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error creating client:', error);"
      },
      {
        "file": "/src/components/layout/Header.tsx",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al detener impersonation:', error);"
      },
      {
        "file": "/src/components/layout/Header.tsx",
        "line": 80,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al descargar logs');"
      },
      {
        "file": "/src/components/layout/Header.tsx",
        "line": 83,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al descargar logs:', error);"
      },
      {
        "file": "/src/components/layout/TopBar.tsx",
        "line": 36,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error al detener impersonation:', error);"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar categorías\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 69,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading categorias:\", err);"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 80,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede crear la categoría: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 94,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear categoría\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 103,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 112,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede actualizar la categoría: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 126,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar categoría\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 139,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 151,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar categoría\");"
      },
      {
        "file": "/src/hooks/useCategorias.ts",
        "line": 158,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 57,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede crear el cliente: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 71,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear cliente\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 80,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 89,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede actualizar el cliente: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 103,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar cliente\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 116,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 128,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar cliente\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 135,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 161,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar clientes\");"
      },
      {
        "file": "/src/hooks/useClientes.ts",
        "line": 168,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading clientes:\", err);"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 39,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(`Error al cargar empresas: ${response.status}`);"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear empresa\");"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 71,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 85,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar empresa\");"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 98,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 110,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar empresa\");"
      },
      {
        "file": "/src/hooks/useEmpresas.ts",
        "line": 117,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useEstadosByCompany.ts",
        "line": 31,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar estados\");"
      },
      {
        "file": "/src/hooks/useEstadosByCompany.ts",
        "line": 40,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading estados:\", err);"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 111,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar estados de remitos\");"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 118,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading estados:\", err);"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 143,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear estado\");"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 152,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 169,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar estado\");"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 180,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 192,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar estado\");"
      },
      {
        "file": "/src/hooks/useEstadosRemitos.ts",
        "line": 199,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 23,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(data.error || 'Error al impersonar usuario');"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 41,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('❌ Error al impersonar:', error);"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 42,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error message:', error instanceof Error ? error.message : 'Error al impersonar usuario');"
      },
      {
        "file": "/src/hooks/useImpersonation.ts",
        "line": 72,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('❌ Error al detener impersonation:', error);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 82,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar productos\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 89,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading productos:\", err);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 100,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede crear el producto: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 114,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear producto\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 123,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 132,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede actualizar el producto: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 146,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar producto\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 159,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 173,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar stock\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 186,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 198,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar producto\");"
      },
      {
        "file": "/src/hooks/useProductos.ts",
        "line": 205,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 85,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar remitos\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 92,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading remitos:\", err);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 103,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"No se puede crear el remito: CompanyId no disponible\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 117,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear remito\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 126,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 140,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar remito\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 153,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 167,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar estado del remito\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 180,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 192,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar remito\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 199,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 207,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar remito\");"
      },
      {
        "file": "/src/hooks/useRemitos.ts",
        "line": 211,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading remito:\", err);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 46,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error response:', errorData);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 47,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al cargar usuarios\");"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 55,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error(\"Error loading usuarios:\", err);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 77,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al crear usuario\");"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 86,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 106,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al actualizar usuario\");"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 119,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 131,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorData.message || \"Error al eliminar usuario\");"
      },
      {
        "file": "/src/hooks/useUsuarios.ts",
        "line": 138,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(errorMessage);"
      },
      {
        "file": "/src/lib/logger.ts",
        "line": 52,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error writing to log file:', error);"
      },
      {
        "file": "/src/lib/logger.ts",
        "line": 155,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error reading log file:', error);"
      },
      {
        "file": "/src/lib/logger.ts",
        "line": 173,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error cleaning logs:', error);"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 7,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar las categorías\")"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 23,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al crear la categoría\")"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 40,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al actualizar la categoría\")"
      },
      {
        "file": "/src/lib/services/categoryService.ts",
        "line": 53,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al eliminar la categoría\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 7,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar los clientes\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 23,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al crear el cliente\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 40,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al actualizar el cliente\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 53,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al eliminar el cliente\")"
      },
      {
        "file": "/src/lib/services/clientService.ts",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar el cliente\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 7,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar los productos\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 23,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al crear el producto\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 40,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al actualizar el producto\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 53,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al eliminar el producto\")"
      },
      {
        "file": "/src/lib/services/productService.ts",
        "line": 62,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar el producto\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 7,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar los remitos\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 23,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al crear el remito\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 32,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(\"Error al cargar el remito\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 53,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al actualizar el estado del remito\")"
      },
      {
        "file": "/src/lib/services/remitoService.ts",
        "line": 66,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error(error.error || \"Error al eliminar el remito\")"
      },
      {
        "file": "/src/lib/storage.ts",
        "line": 61,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error loading stored data:', error);"
      },
      {
        "file": "/src/lib/storage.ts",
        "line": 79,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error saving data:', error);"
      },
      {
        "file": "/src/lib/supabase.ts",
        "line": 8,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "throw new Error('Missing Supabase environment variables')"
      },
      {
        "file": "/src/lib/utils/estado-validator.ts",
        "line": 31,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error validating estado:', error);"
      },
      {
        "file": "/src/lib/utils/estado-validator.ts",
        "line": 67,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error validating estado by ID:', error);"
      },
      {
        "file": "/src/lib/utils/estado-validator.ts",
        "line": 101,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error getting estados for company:', error);"
      },
      {
        "file": "/src/lib/utils/estado-validator.ts",
        "line": 142,
        "issue": "Error handling encontrado",
        "severity": "medium",
        "solution": "Revisar el manejo de errores y asegurar que se muestren mensajes informativos al usuario",
        "codeSnippet": "console.error('Error validating estados:', error);"
      }
    ],
    "id": "feedback_1761428115717_tbfa9jv9w"
  }
]