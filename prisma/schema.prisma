generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id        String    @id
  companyId String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Company   Company   @relation(fields: [companyId], references: [id])
  Product   Product[]

  @@unique([companyId, name])
}

model Client {
  id        String   @id
  companyId String
  name      String
  address   String?
  phone     String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime
  Company   Company  @relation(fields: [companyId], references: [id])
  Remito    Remito[]

  @@unique([companyId, name])
}

model Company {
  id        String     @id
  name      String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime
  Category  Category[]
  Client    Client[]
  Product   Product[]
  Remito    Remito[]
  User      User[]
}

model Product {
  id          String       @id
  companyId   String
  categoryId  String?
  name        String
  description String?
  price       Decimal
  stock       StockStatus  @default(OUT_OF_STOCK)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime
  Category    Category?    @relation(fields: [categoryId], references: [id])
  Company     Company      @relation(fields: [companyId], references: [id])
  RemitoItem  RemitoItem[]

  @@unique([companyId, name])
}

model Remito {
  id            String          @id
  companyId     String
  number        Int
  clientId      String
  status        DeliveryStatus  @default(PENDIENTE)
  statusAt      DateTime        @default(now())
  notes         String?
  createdById   String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  Client        Client          @relation(fields: [clientId], references: [id])
  Company       Company         @relation(fields: [companyId], references: [id])
  User          User            @relation(fields: [createdById], references: [id])
  RemitoItem    RemitoItem[]
  StatusHistory StatusHistory[]

  @@unique([companyId, number])
}

model RemitoItem {
  id          String   @id
  remitoId    String
  productId   String?
  quantity    Int
  productName String
  productDesc String?
  unitPrice   Decimal
  lineTotal   Decimal
  Product     Product? @relation(fields: [productId], references: [id])
  Remito      Remito   @relation(fields: [remitoId], references: [id])
}

model StatusHistory {
  id       String         @id
  remitoId String
  status   DeliveryStatus
  at       DateTime       @default(now())
  byUserId String?
  User     User?          @relation(fields: [byUserId], references: [id])
  Remito   Remito         @relation(fields: [remitoId], references: [id])
}

model User {
  id                  String          @id
  companyId           String?
  email               String          @unique
  password            String
  name                String
  role                Role            @default(USER)
  address             String?
  phone               String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime
  impersonatingUserId String?
  Remito              Remito[]
  StatusHistory       StatusHistory[]
  Company             Company?        @relation(fields: [companyId], references: [id])
}

enum DeliveryStatus {
  PENDIENTE
  PREPARADO
  ENTREGADO
}

enum Role {
  SUPERADMIN
  ADMIN
  USER
}

enum StockStatus {
  IN_STOCK
  OUT_OF_STOCK
}
