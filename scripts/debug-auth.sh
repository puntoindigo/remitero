#!/bin/bash

echo "üîç Debugging de autenticaci√≥n paso a paso..."

echo "üîß PASO 1: Verificando configuraci√≥n de NextAuth..."
echo "Verificando archivo de configuraci√≥n de NextAuth..."

if [ -f "src/lib/auth.ts" ]; then
    echo "‚úÖ Archivo auth.ts encontrado"
    echo "Contenido relevante:"
    grep -A 5 -B 5 "authorize" src/lib/auth.ts
else
    echo "‚ùå Archivo auth.ts no encontrado"
fi

echo ""
echo "üîß PASO 2: Verificando configuraci√≥n de base de datos..."
if [ -f "src/lib/db.ts" ]; then
    echo "‚úÖ Archivo db.ts encontrado"
    echo "Contenido relevante:"
    grep -A 10 "getDatabaseUrl" src/lib/db.ts
else
    echo "‚ùå Archivo db.ts no encontrado"
fi

echo ""
echo "üîß PASO 3: Verificando variables de entorno en Vercel..."
vercel env ls | grep -E "(DATABASE_URL|NEXTAUTH_URL|NEXTAUTH_SECRET)"

echo ""
echo "üîß PASO 4: Probando conexi√≥n a base de datos localmente..."
export DATABASE_URL="postgres://62d8691c0bca04a5fcb0a8ee92435e1de4d8ed608f10fb2a8ec597f4583e5cb1:sk_hxRVX8P69LXH27p3HUamd@db.prisma.io:5432/postgres?sslmode=require"

# Crear script temporal para probar conexi√≥n
cat > temp_debug_db.js << 'EOF'
const { PrismaClient } = require('@prisma/client');

async function debugDB() {
    const prisma = new PrismaClient();
    
    try {
        console.log('üîç Probando conexi√≥n a base de datos...');
        await prisma.$connect();
        console.log('‚úÖ Conexi√≥n exitosa');
        
        const userCount = await prisma.user.count();
        console.log(`üìä Total de usuarios: ${userCount}`);
        
        const users = await prisma.user.findMany({
            select: {
                email: true,
                role: true,
                name: true
            }
        });
        
        console.log('üë• Usuarios encontrados:');
        users.forEach(user => {
            console.log(`  ‚Ä¢ ${user.email} (${user.role})`);
        });
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
    } finally {
        await prisma.$disconnect();
    }
}

debugDB();
EOF

node temp_debug_db.js
rm -f temp_debug_db.js

echo ""
echo "üîß PASO 5: Verificando configuraci√≥n de NextAuth en el c√≥digo..."
echo "Buscando configuraci√≥n de NextAuth en el proyecto..."

if [ -f "src/app/api/auth/[...nextauth]/route.ts" ]; then
    echo "‚úÖ Archivo de ruta NextAuth encontrado"
    echo "Contenido:"
    cat src/app/api/auth/[...nextauth]/route.ts
else
    echo "‚ùå Archivo de ruta NextAuth no encontrado"
fi

echo ""
echo "üîß PASO 6: Verificando si hay errores en el build..."
echo "Verificando si el proyecto compila correctamente..."

if npm run build > /dev/null 2>&1; then
    echo "‚úÖ Build exitoso"
else
    echo "‚ùå Error en el build"
    echo "Ejecutando build para ver errores:"
    npm run build
fi

echo ""
echo "üí° DIAGN√ìSTICO:"
echo "‚Ä¢ Si la conexi√≥n a la base de datos falla, el problema est√° en las variables de entorno"
echo "‚Ä¢ Si el build falla, hay errores en el c√≥digo"
echo "‚Ä¢ Si NextAuth no est√° configurado, falta el archivo de ruta"
echo ""
echo "üîß PR√ìXIMOS PASOS:"
echo "1. Verificar que todas las variables de entorno est√©n configuradas"
echo "2. Asegurar que el build sea exitoso"
echo "3. Verificar que NextAuth est√© configurado correctamente"
